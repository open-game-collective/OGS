/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useGLTF } from '@react-three/drei';
import type THREE from 'three';
import type { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Curve: THREE.Mesh;
    Curve001: THREE.Mesh;
    Curve002: THREE.Mesh;
    Curve003: THREE.Mesh;
  };
  materials: {
    ['SVGMat.001']: THREE.MeshStandardMaterial;
    ['SVGMat.002']: THREE.MeshStandardMaterial;
    ['SVGMat.003']: THREE.MeshStandardMaterial;
    ['SVGMat.004']: THREE.MeshStandardMaterial;
  };
};

export function OGSModel(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/static/ogs.glb') as GLTFResult;
  return (
    <group
      {...props}
      position={[-0.25, 0, 0]}
      dispose={null}
      rotation={[Math.PI / 2, 0, 0]}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Curve.geometry}
        material={materials['SVGMat.001']}
      >
        <meshBasicMaterial attach="material" color={'#000'} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Curve001.geometry}
        material={materials['SVGMat.002']}
        position={[0, 0.015, 0]}
      >
        <meshBasicMaterial attach="material" color={'#444'} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Curve002.geometry}
        material={materials['SVGMat.003']}
      >
        <meshBasicMaterial attach="material" color={'#777'} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Curve003.geometry}
        material={materials['SVGMat.004']}
      >
        <meshBasicMaterial attach="material" color={'#777'} />
      </mesh>
    </group>
  );
}

useGLTF.preload('/static/ogs.glb');
